///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Core/Memory/Mapper.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace NES::Mappers
///////////////////////////////////////////////////////////////////////////////
namespace NES::Mappers
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class NROM : public Mapper
{
private:
    ///////////////////////////////////////////////////////////////////////////
    // Private properties
    ///////////////////////////////////////////////////////////////////////////
    bool m_oneBank;             //<! Cartridge has only one PGR bank
    bool m_usesCHRRam;          //<! Cartridge uses CHR RAM
    std::vector<Byte> m_chrRAM; //<! CHR RAM for the cartridge

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param cartridge
    ///
    ///////////////////////////////////////////////////////////////////////////
    NROM(Cartridge& cartridge);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param address
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual Byte ReadPGR(Uint16 address) override;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param address
    /// \param value
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void WritePGR(Uint16 address, Byte value) override;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param address
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual Byte ReadCHR(Uint16 address) override;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param address
    /// \param value
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void WriteCHR(Uint16 address, Byte value) override;
};

} // !namespace NES::Mappers
