///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Core/Memory/Mapper.hpp"
#include <vector>

///////////////////////////////////////////////////////////////////////////////
// Namespace NES::Mappers
///////////////////////////////////////////////////////////////////////////////
namespace NES::Mappers
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class UxROM : public Mapper
{
private:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    bool m_usesCHRRAM;          //<! Flag indicating if CHR RAM is used
    const Byte* m_bankPtr;      //<! Pointer to the current bank
    Address m_selectPGR;        //<! Selected PGR address for writing
    std::vector<Byte> m_ram;    //<! RAM for CHR data

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param cartridge
    ///
    ///////////////////////////////////////////////////////////////////////////
    UxROM(Cartridge& cartridge);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param address
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual Byte ReadPGR(Address address) override;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param address
    /// \param value
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void WritePGR(Address address, Byte value) override;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param address
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual Byte ReadCHR(Address address) override;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param address
    /// \param value
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void WriteCHR(Address address, Byte value) override;
};

} // !namespace NES::Mappers
