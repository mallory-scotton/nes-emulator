///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Utils/Types.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace NES
///////////////////////////////////////////////////////////////////////////////
namespace NES
{

///////////////////////////////////////////////////////////////////////////////
// Forward declarations
///////////////////////////////////////////////////////////////////////////////
class Cartridge;

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Mapper
{
public:
    ///////////////////////////////////////////////////////////////////////////
    // Public members
    ///////////////////////////////////////////////////////////////////////////
    Uint8 id;                       //<! Mapper ID

protected:
    ///////////////////////////////////////////////////////////////////////////
    // Protected static constants
    ///////////////////////////////////////////////////////////////////////////
    static constexpr int PGR_BANK_SIZE = 8192; //<! 8KB
    static constexpr int CHR_BANK_SIZE = 1024; //<! 1KB
    static constexpr int PGR_BANK_COUNT = 4;   //<! 4 banks of 8KB each
    static constexpr int CHR_BANK_COUNT = 8;   //<! 8 banks of 1KB each

protected:
    ///////////////////////////////////////////////////////////////////////////
    // Protected members
    ///////////////////////////////////////////////////////////////////////////
    Rom<Byte>& m_pgr;               //<! Program ROM data
    Rom<Byte>& m_chr;               //<! Character ROM data
    Uint8 m_pgrRam;                 //<! Program RAM size in 8KB units
    int m_pgrMap[PGR_BANK_COUNT];   //<! Program memory mapping
    int m_chrMap[CHR_BANK_COUNT];   //<! Character memory mapping

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param cartridge
    /// \param id
    ///
    ///////////////////////////////////////////////////////////////////////////
    Mapper(Cartridge& cartridge, Uint8 id);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param address
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual Byte ReadPGR(Uint16 address) = 0;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param address
    /// \param value
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void WritePGR(Uint16 address, Byte value) = 0;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param address
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual Byte ReadCHR(Uint16 address) = 0;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param address
    /// \param value
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void WriteCHR(Uint16 address, Byte value) = 0;
};

} // !namespace NES
