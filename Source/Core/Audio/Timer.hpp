///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Utils.hpp"
#include <chrono>

///////////////////////////////////////////////////////////////////////////////
// Namespace NES::Audio
///////////////////////////////////////////////////////////////////////////////
namespace NES::Audio
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Timer
{
public:
    ///////////////////////////////////////////////////////////////////////////
    // Public members
    ///////////////////////////////////////////////////////////////////////////
    const std::chrono::nanoseconds period;   //<!

private:
    ///////////////////////////////////////////////////////////////////////////
    // Private members
    ///////////////////////////////////////////////////////////////////////////
    std::chrono::nanoseconds m_leftover;    //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param period
    ///
    ///////////////////////////////////////////////////////////////////////////
    Timer(std::chrono::nanoseconds period);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param elasped
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    int Clock(std::chrono::nanoseconds elasped);
};

} // !namespace NES::Audio
